@model PocketBudget.Models.PathViewModel
@{
    Layout = "~/Views/Shared/_Base.cshtml";
}

<div>    
    <div class="budget-block">
        <div id="chart-block-new" style="width:90%; height:100%; max-width: 1400px; float: left">
            <canvas id="chart"></canvas>
        </div>
        @MinimalInformationSettingsBlock()
    </div>
    @EditSettingsBlock()
</div>
<div id="tooltip-element-content">@Html.Partial("_ChartTooltip")</div>
<div id="tooltip-element"></div>

<script type="text/javascript">
    var PersonalFinances = PersonalFinances || {};
    PersonalFinances.Path = PersonalFinances.Path || {};
</script>

@functions
{
    protected string When(bool condition, string then, string otherwise = null)
    {
        return condition ? then : otherwise;
    }
}

@helper MinimalInformationSettingsBlock()
{
    <div class="minimal-budget-block">
        <p>
            <a class="minimal-budget-block-btn waves-effect waves-light btn button-collapse grey lighten-3" data-activates="slide-out"><i class="material-icons left">edit</i>Змінити</a>
        </p>
        <div>
            <div>
                @Html.DisplayFor(m => m.Salary)
            </div>
            <div>
                @Html.DisplayFor(m => m.Savings)
            </div>
            <div>
                @Html.DisplayFor(m => m.Pension)
            </div>
            <div>
                @Html.DisplayFor(m => m.Spendings)
            </div>
            <div>
                <p>
                    @Html.LabelFor(m => m.CurrentAge)
                    <span class="newline @Html.IdFor(m => m.CurrentAge)">
                        @Html.DisplayFor(m => m.CurrentAge)
                    </span>
                </p>
                <p>
                    @Html.LabelFor(m => m.RetirementAge)
                    <span class="newline @Html.IdFor(m => m.RetirementAge)">
                        @Html.DisplayFor(m => m.RetirementAge)
                    </span>
                </p>
                <p>
                    @Html.LabelFor(m => m.LifeExpectancy)
                    <span class="newline @Html.IdFor(m => m.LifeExpectancy)">
                        @Html.DisplayFor(m => m.LifeExpectancy)
                    </span>
                </p>
            </div>
        </div>
    </div>
}

@helper EditSettingsBlock()
{
    <div class="navbar-fixed">
        <nav>
            <div class="nav-wrapper">
                <div id="slide-out" class="side-nav">
                    @using (Html.BeginForm("GetChartLines", "Home", FormMethod.Post, htmlAttributes: new { id = "path-form" }))
                    {
                        <div class="form-row">
                            @Html.EditorFor(m => m.Salary)
                        </div>
                        <div class="form-row">
                            @Html.EditorFor(m => m.Savings)
                        </div>
                        <div class="form-row">
                            @Html.EditorFor(m => m.Pension)
                        </div>
                        <div class="form-row">
                            @Html.EditorFor(m => m.Spendings)
                        </div>
                        <div class="form-row">
                            @Html.LabelFor(m => m.CurrentAge)
                            @Html.TextBoxFor(m => m.CurrentAge, htmlAttributes: new { @class = "graph-updater current-age", type = "number" })
                            @Html.ValidationMessageFor(m => m.CurrentAge)
                        </div>
                        <div class="form-row">
                            @Html.LabelFor(m => m.RetirementAge)
                            @Html.TextBoxFor(m => m.RetirementAge, htmlAttributes: new { @class = "graph-updater retirement-age", type = "number" })
                            @Html.ValidationMessageFor(m => m.RetirementAge)
                        </div>
                        <div class="form-row last-row">
                            @Html.LabelFor(m => m.LifeExpectancy)
                            @Html.TextBoxFor(m => m.LifeExpectancy, htmlAttributes: new { @class = "graph-updater life-expectancy-age", type = "number" })
                            @Html.ValidationMessageFor(m => m.LifeExpectancy)
                        </div>
                    }
                </div>
            </div>
        </nav>
    </div>
}