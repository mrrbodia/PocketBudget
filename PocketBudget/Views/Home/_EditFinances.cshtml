@model PocketBudget.Models.AdditionalPathViewModel
@using PocketBudget.Extensions
<div class="edit-finances-content">
    <div class="edit-finances-tabs-header">
        <ul class="tabs">
            <li class="tab col s3"><a href="#additional-path-income">Доходи</a></li>
            <li class="tab col s3"><a href="#additional-path-cost">Витрати</a></li>
        </ul>
    </div>
    <div class="edit-finances-tabs-wrapper">
        @using (Html.BeginForm("GetChartLines", "Home", FormMethod.Post, htmlAttributes: new { id = "additional-path-form" }))
        {
            <div id="additional-path-income" class="col s12">
                <div>
                    @Html.LabelFor(m => m.AdditionalIncome.From)
                    @Html.TextBoxFor(m => m.AdditionalIncome.From, htmlAttributes: new { type = "number", @class = "income-from" })
                    @Html.ValidationMessageFor(m => m.AdditionalIncome.From)
                </div>
                <ul class="collapsible" data-collapsible="expandable">
                    <li>
                        <div class="collapsible-header">
                            <span>Депозит</span>
                        </div>
                        <div class="row collapsible-body deposits">
                            <p>
                                @Html.EditorFor(m => m.AdditionalIncome.IsDepositAdded, new { Label = "Додати депозит", Class = "add-deposit" })
                            </p>
                            @for (var i = 0; i < Model.AdditionalIncome.Deposits.Count; ++i)
                            {
                                var visibility = Model.AdditionalIncome.Deposits[i].IsActive ? "active" : "hidden";
                                var selected = Model.AdditionalIncome.Deposits[i].IsActive ? "checked" : "";
                                <p>
                                    <input id="@Html.GetFullHtmlFieldId(m => m.AdditionalIncome.Deposits[i].CurrencyId)" name="@Html.GetFullHtmlFieldName(m => m.AdditionalIncome.Deposits[i].CurrencyId)" 
                                           class="currency option-input @visibility" type="radio" value="@Model.AdditionalIncome.Deposits[i].CurrencyId" @selected />
                                    <label for="@Html.GetFullHtmlFieldId(m => m.AdditionalIncome.Deposits[i].CurrencyId)"
                                           class="option-input @visibility">@Model.AdditionalIncome.Deposits[i].Title</label>
                                    <input name="@Html.GetFullHtmlFieldName(m => m.AdditionalIncome.Deposits[i].Percentage)" 
                                           class="percentage hidden" type="hidden" value="@Model.AdditionalIncome.Deposits[i].Percentage" />
                                    <input id="@Html.GetFullHtmlFieldId(m => m.AdditionalIncome.Deposits[i].Total)" name="@Html.GetFullHtmlFieldName(m => m.AdditionalIncome.Deposits[i].Total)"
                                           class="total option-input @visibility" type="number" value="@Model.AdditionalIncome.Deposits[i].Total" />
                                    <input id="@Html.GetFullHtmlFieldId(m => m.AdditionalIncome.Deposits[i].Years)" name="@Html.GetFullHtmlFieldName(m => m.AdditionalIncome.Deposits[i].Years)" 
                                           class="years option-input @visibility" type="number" value="@Model.AdditionalIncome.Deposits[i].Years" />
                                </p>
                            }
                        </div>
                    </li>
                    <li>
                        <div class="collapsible-header">
                            <span>Продаж</span>
                        </div>
                        <div class="row collapsible-body sales">
                            <p>
                                @Html.EditorFor(m => m.AdditionalIncome.IsSaleAdded, new { Label = "Продати майно", Class = "add-sale" })
                            </p>
                            @for (int i = 0; i < Model.AdditionalIncome.Sales.Count; ++i)
                            {
                                var visibility = Model.AdditionalIncome.Sales[i].IsActive ? "active" : "hidden";
                                var selected = Model.AdditionalIncome.Sales[i].IsActive ? "checked" : "";
                                <p>
                                    <input id="@Html.GetFullHtmlFieldId(m => Model.AdditionalIncome.Sales[i].CurrencyId)" name="@Html.GetFullHtmlFieldName(m => Model.AdditionalIncome.Sales[i].CurrencyId)"
                                           class="currency option-input @visibility" type="radio" value="@Model.AdditionalIncome.Sales[i].CurrencyId" @selected/>
                                    <label for="@Html.GetFullHtmlFieldId(m => Model.AdditionalIncome.Sales[i].CurrencyId)" 
                                           class="option-input @visibility">@Model.AdditionalIncome.Sales[i].Title</label>
                                    <input id="@Html.GetFullHtmlFieldId(m => Model.AdditionalIncome.Sales[i].Total)" name="@Html.GetFullHtmlFieldName(m => Model.AdditionalIncome.Sales[i].Total)"
                                           class="total option-input @visibility" type="number" value="@Model.AdditionalIncome.Sales[i].Total" />
                                </p>
                            }
                        </div>
                    </li>
                </ul>
            </div>
            <div id="additional-path-cost" class="col s12">
                <div>
                    @Html.LabelFor(m => m.AdditionalCost.From)
                    @Html.TextBoxFor(m => m.AdditionalCost.From, htmlAttributes: new { type = "number", @class = "cost-from" })
                    @Html.ValidationMessageFor(m => m.AdditionalCost.From)
                </div>
                <ul class="collapsible" data-collapsible="expandable">
                    <li>
                        <div class="collapsible-header">
                            <span>Кредит</span>
                        </div>
                        <div class="row collapsible-body credits">
                            <p>
                                @Html.EditorFor(m => m.AdditionalCost.IsCreditAdded, new { Label = "Додати кредит", Class = "add-credit" })
                            </p>
                            @for (int i = 0; i < Model.AdditionalCost.Credits.Count; ++i)
                            {
                                var visibility = Model.AdditionalCost.Credits[i].IsActive ? "active" : "hidden";
                                var selected = Model.AdditionalCost.Credits[i].IsActive ? "checked" : "";
                                <p>
                                    <input id="@Html.GetFullHtmlFieldId(m => Model.AdditionalCost.Credits[i].CurrencyId)" name="@Html.GetFullHtmlFieldName(m => Model.AdditionalCost.Credits[i].CurrencyId)" 
                                           class="currency option-input @visibility" type="radio" value="@Model.AdditionalCost.Credits[i].CurrencyId" @selected />
                                    <label for="@Html.GetFullHtmlFieldId(m => Model.AdditionalCost.Credits[i].CurrencyId)"
                                           class="option-input @visibility">@Model.AdditionalCost.Credits[i].Title</label>
                                    <input name="@Html.GetFullHtmlFieldName(m => Model.AdditionalCost.Credits[i].Percentage)" 
                                           class="percentage hidden" type="hidden" value="@Model.AdditionalCost.Credits[i].Percentage" />
                                    <input id="@Html.GetFullHtmlFieldId(m => Model.AdditionalCost.Credits[i].Total)" name="@Html.GetFullHtmlFieldName(m => Model.AdditionalCost.Credits[i].Total)" 
                                           class="total option-input @visibility" type="number" value="@Model.AdditionalCost.Credits[i].Total" />
                                    <input id="@Html.GetFullHtmlFieldId(m => Model.AdditionalCost.Credits[i].Years)" name="@Html.GetFullHtmlFieldName(m => Model.AdditionalCost.Credits[i].Years)" 
                                           class="years option-input @visibility" type="number" value="@Model.AdditionalCost.Credits[i].Years" />
                                </p>
                            }
                        </div>
                    </li>
                    <li>
                        <div class="collapsible-header">
                            <span>Покупка</span>
                        </div>
                        <div class="row collapsible-body purchases">
                            <p>
                                @Html.EditorFor(m => m.AdditionalCost.IsPurchaseAdded, new { Label = "Зробити покупку", Class = "add-purchase" })
                            </p>
                            @for (int i = 0; i < Model.AdditionalCost.Purchases.Count; ++i)
                            {
                                var visibility = Model.AdditionalCost.Purchases[i].IsActive ? "active" : "hidden";
                                var selected = Model.AdditionalCost.Purchases[i].IsActive ? "checked" : "";
                                <p>
                                    <input id="@Html.GetFullHtmlFieldId(m => Model.AdditionalCost.Purchases[i].CurrencyId)" name="@Html.GetFullHtmlFieldName(m => Model.AdditionalCost.Purchases[i].CurrencyId)"
                                           class="currency option-input @visibility" type="radio" value="@Model.AdditionalCost.Purchases[i].CurrencyId" @selected />
                                    <label for="@Html.GetFullHtmlFieldId(m => Model.AdditionalCost.Purchases[i].CurrencyId)"
                                           class="option-input @visibility">@Model.AdditionalCost.Purchases[i].Title</label>
                                    <input id="@Html.GetFullHtmlFieldId(m => Model.AdditionalCost.Purchases[i].Total)" name="@Html.GetFullHtmlFieldName(m => Model.AdditionalCost.Purchases[i].Total)"
                                           class="total option-input @visibility" type="number" value="@Model.AdditionalCost.Purchases[i].Total" />
                                </p>
                            }
                        </div>
                    </li>
                </ul>
            </div>
        }
    </div>
</div>